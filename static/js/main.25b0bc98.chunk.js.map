{"version":3,"sources":["info.js","board.js","loading.js","modal.js","App.js","serviceWorker.js","index.js"],"names":["Info","props","componentDidMount","millisToMinutesAndSeconds","millis","hours","Math","floor","minutes","seconds","toFixed","this","mines","className","mineRemain","time","Component","Board","cells","board","map","e","i","key","o","j","isClick","onClick","check","bind","onContextMenu","mark","value","Loading","loading","cx","cy","r","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","Modal","notify","size","isWin","newGame","backHomePage","App","state","setState","push","isMine","x","y","axios","get","params","then","res","forEach","tick","intervalID","setInterval","num","len","leng","area","traverseBoard","console","log","checkNumber","el","clearInterval","checkWin","conditionWin","numClick","length","preventDefault","type","setGame","checkGame","markCell","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25b0bc98.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Info extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount = () => {}\r\n\r\n    millisToMinutesAndSeconds = ((millis) => {\r\n        let hours = Math.floor(millis / 3600);\r\n        let minutes = Math.floor((millis / 60) % 60);\r\n        let seconds = (millis % 60).toFixed(0);\r\n        return (hours < 10 ? '0' : '') + hours + \":\" + (minutes < 10 ? '0' : '') + minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    });\r\n\r\n    render() {\r\n\r\n        if (!this.props.mines) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"game-info\">\r\n                <span className=\"info\">\r\n                    Mines remaining: {this.props.mineRemain}\r\n                </span>\r\n                <h1 className=\"info\">{this.millisToMinutesAndSeconds(this.props.time)}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info","import React, { Component } from 'react';\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount = () => {}\r\n\r\n    render() {\r\n        if (!this.props.mines) {\r\n            return null;\r\n        }\r\n\r\n        const cells = this.props.board.map((e, i) => {\r\n            return (\r\n                <div className=\"clearfix\" key={i}>\r\n                    {\r\n                        e.map((o, j) => (\r\n                            <div key={i + '-' + j} className={o.isClick ? 'cell hidden' : 'cell'} onClick={this.props.check.bind(this, i, j)} onContextMenu={this.props.mark.bind(this, i, j)}>{o.value}</div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n            \r\n        });\r\n\r\n        return (\r\n            <>\r\n                {cells}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount = () => {}\r\n\r\n    render() {\r\n        const { loading } = this.props;\r\n\r\n        if (!loading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"loader-box\">\r\n                    <svg className=\"loader\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#8ad3ff\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-2\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#ce9178\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-3\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#b869a0\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-4\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#5d8a4e\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-5\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"black\" strokeWidth=\"6\" strokeLinecap=\"round\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-6\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#4387cf\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-7\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"b86cb4\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                    <svg className=\"loader loader-8\">\r\n                        <circle cx=\"75\" cy=\"75\" r=\"60\" fill=\"transparent\" stroke=\"#d4d797\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDasharray=\"385\" strokeDashoffset=\"385\"></circle>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"loading-page-backdrop\"></div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount = () => {}\r\n\r\n    millisToMinutesAndSeconds = ((millis) => {\r\n        let hours = Math.floor(millis / 3600);\r\n        let minutes = Math.floor((millis / 60) % 60);\r\n        let seconds = (millis % 60).toFixed(0);\r\n        return (hours < 10 ? '0' : '') + hours + \":\" + (minutes < 10 ? '0' : '') + minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    });\r\n\r\n    render() {\r\n        if (!this.props.notify) {\r\n            return false;\r\n        }\r\n\r\n        const size = (this.props.mines === 10) ? 9 : 16; \r\n\r\n        return (\r\n            <div className=\"messagebox\">\r\n                <div className=\"box\">\r\n                    <div className=\"body\">\r\n                        you { !this.props.isWin ? 'lost' : 'win' } the game in {this.millisToMinutesAndSeconds(this.props.time)}\r\n                    </div>\r\n                    \r\n                    <div className=\"buttons\">\r\n                      <button onClick={this.props.newGame.bind(this, size, this.props.mines)}>New Game</button>\r\n                      <button onClick={this.props.backHomePage}>Home Page</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React, { Component } from 'react';\nimport Info from './info.js';\nimport Board from './board.js';\nimport Loading from './loading.js';\nimport Modal from './modal.js';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            isWin: false,\n            notify: false,\n            board: [],\n            mines: 0,\n            time: 0,\n            mineRemain: 0,\n            mark: 0\n        };\n    }\n\n    componentDidMount = () => {}\n\n    setGame(size, mines) {\n        this.setState({loading: true, isWin: false, notify: false, time: 0});\n\n    \tconst board = [];\n\n    \tfor (let i = 0; i < size; i++) {\n    \t\tboard.push([]);\n    \t\tfor (let j = 0; j < size; j++) {\n    \t\t\tboard[i].push({\n    \t\t\t\tisMine: false,\n    \t\t\t\tvalue: '',\n                    x: j,\n                    y: i\n    \t\t\t});\n    \t\t}\n    \t}\n\n    \taxios.get('https://tiki-minesweeper.herokuapp.com/getMines', {params: {size: size, mines: mines}}).then((res) => {\n    \t\tres['data']['data'].forEach(e => {\n    \t\t\tboard[e.y][e.x].isMine = true;\n    \t\t});\n    \t\tthis.setState({board: board, mines: mines, mineRemain: mines, loading: false});\n            this.tick();\n    \t});\n    }\n\n    tick() {\n        this.intervalID = setInterval(() => {\n            this.setState({\n                time: this.state.time + 1\n            });\n        }, 1000);\n    }\n\n    checkNumber(y, x) {\n    \tconst { board } = this.state;\n    \tlet num = 0;\n\n        board[y][x].isClick = true;\n\n    \tfor (let i = y - 1, len = y + 2; i < len; i++) {\n    \t\tfor (let j = x - 1, leng = x + 2; j < leng; j++) {\n    \t\t\tif (((board[i] || [])[j] || {}).isMine) {\n    \t\t\t\tnum++;\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \tif (num) {\n            board[y][x].value = num;\n        } else {\n            board[y][x].value = '';\n            const area = this.traverseBoard(y, x);\n\n            console.log(area);\n\n            area.forEach(e => {\n                if (!e.isClick && !e.isMine) {\n                    this.checkNumber(e.y, e.x);\n                }\n            });\n        }\n\n    \tthis.setState({board: board});\n    }\n\n    traverseBoard(y, x) {\n        const { board, mines } = this.state;\n        const size = (mines === 10) ? 9 : 16; \n        const el = [];\n\n        if (y > 0) {\n            el.push(board[y - 1][x]);\n        }\n\n        if (y < size - 1) {\n            el.push(board[y + 1][x]);\n        }\n\n        if (x > 0) {\n            el.push(board[y][x - 1]);\n        }\n\n        if (x < size - 1) {\n            el.push(board[y][x + 1]);\n        }\n\n        if (y > 0 && x > 0) {\n            el.push(board[y - 1][x - 1]);\n        }\n\n        if (y > 0 && x < size - 1) {\n            el.push(board[y - 1][x + 1]);\n        }\n\n        if (y < size - 1 && x < size - 1) {\n            el.push(board[y + 1][x + 1]);\n        }\n\n        if (y < size - 1 && x > 0) {\n            el.push(board[y + 1][x - 1]);\n        }\n\n        return el;\n    }\n\n    checkGame(y, x) {\n    \tconst { board } = this.state;\n\n    \tif (board[y][x].isClick) {\n    \t\treturn false;\n    \t}\n\n    \tif (board[y][x].isMine) {\n    \t\tboard[y][x].value = '💣';\n            clearInterval(this.intervalID);\n    \t\tthis.setState({board: board, notify: true});\n    \t} else {\n    \t\tthis.checkNumber(y, x);\n            if (this.checkWin()) {\n                clearInterval(this.intervalID);\n                this.setState({notify: true, isWin: true});\n            }\n    \t}\n    }\n\n    checkWin() {\n        const { board, mines } = this.state;\n        let conditionWin = (mines === 10) ? 9*9-10 : 16*16-40;\n        let numClick = 0;\n\n        for(let i = 0, len = board.length; i < len; i++) {\n            for (let j = 0; j < len; j++) {\n                if (board[i][j].isClick) {\n                    numClick++;\n                }\n            }\n        }\n\n        if (numClick === conditionWin) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    markCell(y, x, e) {\n    \te.preventDefault();\n    \tconst { board, mines } = this.state;\n        let { mineRemain, mark } = this.state;\n\n    \tif (board[y][x].isClick) {\n    \t\treturn false;\n    \t}\n\n    \tif (board[y][x].value) {\n    \t\tboard[y][x].value = '';\n            mineRemain = (mark > mines) ? mineRemain : mineRemain + 1;\n            mark = mark - 1;\n    \t} else {\n    \t\tboard[y][x].value = '🚩';\n            mineRemain = (mineRemain === 0) ? 0 : mineRemain - 1;\n            mark = mark + 1;\n    \t}\n\n    \tthis.setState({board: board, mineRemain: mineRemain, mark: mark});\n    }\n\n    backHomePage() {\n        this.setState({\n            loading: false,\n            isWin: false,\n            notify: false,\n            board: [],\n            mines: 0,\n            time: 0,\n            mineRemain: 0,\n            mark: 0\n        });\n    }\n\n    render() {\n    \tconst { loading, notify, isWin, board, mines, time, mineRemain } = this.state;\n\n        return (\n            <>\n                <div className=\"game\">\n    \t    \t\t{!mines ? (\n    \t    \t\t\t<div>\n    \t    \t\t\t\t<button type=\"submit\" onClick={this.setGame.bind(this, 9, 10)}>Beginner</button>\n    \t\t    \t\t\t<button type=\"submit\" onClick={this.setGame.bind(this, 16, 40)}>Advantage</button>\n    \t\t    \t\t</div>\n    \t\t    \t) : ''}\n    \t    \t\t\n    \t    \t\t<Info time={time} mineRemain={mineRemain} mines={mines} />\n    \t    \t\t<Board board={board} mines={mines} check={this.checkGame.bind(this)} mark={(y, x, e) => this.markCell(y, x, e)}/>\n    \t\t    </div>\n                <Loading loading={loading} />\n                <Modal mines={mines} time={time} notify={notify} isWin={isWin} newGame={this.setGame.bind(this)} backHomePage={this.backHomePage.bind(this)} />\n            </>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}